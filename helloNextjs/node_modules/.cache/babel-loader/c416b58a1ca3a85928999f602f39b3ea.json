{"ast":null,"code":"var _jsxFileName = \"/Users/UxDeveloperxU/webAppProject/helloNextjs/pages/index.js\";\nimport React from \"react\";\n\n/*Notes for running the index.js file\nIn order to run program, you must use \n\tnpm run dev \n\nand go to \n\thttp://localhost:3000. \n\nTo use another port, you can run \n\tnpm run dev -- -p <your port here>.\n*/\n\n/*Code updates, error log, and initial error\nupdate: Note, there can olny be one div in the const definition of HomeStartUp\n        Adding the (h1)header tag worked when testing if it would give an error as well.\n        Adding a (p)paragraph tag works after the body text.\n        Leaving only the body text(Homepage start up!) of the div works.\n\nerror log update:Adding the (br)break tag causes an expected corresponding JSX closing tag for <div>. Its best to not use it \n\tuntil further examples explains an alternative for using <br> with next.js\n\tHaving the (br)break tag without the '/' breaks the code from running properly.\n\tHaving an extra line of html code -similar format as the index's div- after the first div, it will crash and\n        give a syntax error saying that:Adjacent JSX elements must be wrapped in an enclosing tag.\n \nInitial error: does not work for some reason -div structured with breaks, header,and paragraph tags crash.\n*/\n\n/*Function declaration*/\nvar HomeStartUp = function HomeStartUp() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Homepage start up!\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Test example code\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Hello, this is the first page and it was successful!\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Don't use breaks yet\"));\n};\n\nexport default HomeStartUp;\n/*however, this does work when ran since it is the example from :next.js\nconst Index = () => (\n  <div>\n    <p>Hello Next.js</p>\n  </div>\n)\n\nexport default Index\n*/","map":{"version":3,"sources":["/Users/UxDeveloperxU/webAppProject/helloNextjs/pages/index.js"],"names":["HomeStartUp"],"mappings":";;;AAAA;;;;;;;;;;;AAYA;;;;;;;;;;;;;;;AAeA;AACA,IAAMA,WAAW,GAAG,SAAdA,WAAc;AAAA,SACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DAHD,EAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJD,CADmB;AAAA,CAApB;;AASA,eAAeA,WAAf;AAIA","sourcesContent":["/*Notes for running the index.js file\nIn order to run program, you must use \n\tnpm run dev \n\nand go to \n\thttp://localhost:3000. \n\nTo use another port, you can run \n\tnpm run dev -- -p <your port here>.\n*/\n\n\n/*Code updates, error log, and initial error\nupdate: Note, there can olny be one div in the const definition of HomeStartUp\n        Adding the (h1)header tag worked when testing if it would give an error as well.\n        Adding a (p)paragraph tag works after the body text.\n        Leaving only the body text(Homepage start up!) of the div works.\n\nerror log update:Adding the (br)break tag causes an expected corresponding JSX closing tag for <div>. Its best to not use it \n\tuntil further examples explains an alternative for using <br> with next.js\n\tHaving the (br)break tag without the '/' breaks the code from running properly.\n\tHaving an extra line of html code -similar format as the index's div- after the first div, it will crash and\n        give a syntax error saying that:Adjacent JSX elements must be wrapped in an enclosing tag.\n \nInitial error: does not work for some reason -div structured with breaks, header,and paragraph tags crash.\n*/\n\n/*Function declaration*/\nconst HomeStartUp = () => (\n\t<div>\n\t\t<h1>Homepage start up!</h1>\n\t\t<h2>Test example code</h2>\n\t\t<p>Hello, this is the first page and it was successful!</p>\n\t\t<p>Don't use breaks yet</p>\n\t</div>\n)\n\nexport default HomeStartUp\n\n\n\n/*however, this does work when ran since it is the example from :next.js\nconst Index = () => (\n  <div>\n    <p>Hello Next.js</p>\n  </div>\n)\n\nexport default Index\n*/\n"]},"metadata":{},"sourceType":"module"}